package se.publicclass.debug.logger {	import se.publicclass.debug.ILogger;	import se.publicclass.debug.Log;		import flash.display.Sprite;	import flash.display.Stage;	import flash.text.TextField;		/**	 * A logging window on the stage.	 * Features:	 *   - Draggable	 *   - Transparent	 *   - Mark an object by name and/or mouse over	 *   - List properties of an object	 *   	 * @author Robert Sk√∂ld, robert(at)publicclass.se	 */	public class StageLogger implements ILogger {		private var _stage : Stage;		private var _window : Sprite;		private var _logWindow : TextField;		private var _infoWindow : TextField;				private var _level : int;		public function StageLogger( target : Stage ) {			_stage = target;						create();		}				private function create() : void {			createWindow();			createLogWindow();			createInfoWindow( );		}		private function createWindow() : void {			_window = new Sprite();			_window.visible = false;			_stage.addChild( _window );		}				private function createLogWindow() : void {			_logWindow = new TextField();			_window.addChild( _logWindow );		}				private function createInfoWindow() : void {			_infoWindow = new TextField();			_window.addChild( _infoWindow );		}				/**		 * A function which outputs a string to update every frame. Kept in 		 * a separate window from the logs.		 * 		 * Examples:		 * 	- a benchmark		 * 	- fps		 * 	- update count		 * 	- tween count.		 */		public function addInfo( msg : String , func : Function ) : void {					}				/**		 * Run every frame. Updates the addInfo functions.		 */		public function updateInfo() : void {					}				/**		 * @inheritDoc		 */		public function setLevel(level : int) : void {			_level = level;		}				/**		 * @inheritDoc		 */		public function log( log : Log ) : void {					}	}}